'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _entries = require('babel-runtime/core-js/object/entries');

var _entries2 = _interopRequireDefault(_entries);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var cov_2ojenfrm3u = function () {
  var path = '/Users/Chase/Sites/Charity/coinfalcon-node/src/client/index.js',
      hash = 'c4967af131a12eb1174bfea1987d7306db2af16e',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/Chase/Sites/Charity/coinfalcon-node/src/client/index.js',
    statementMap: {
      '0': {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 27
        }
      },
      '1': {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 19
        }
      },
      '2': {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 25
        }
      },
      '3': {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 52
        }
      },
      '4': {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 53
        }
      },
      '5': {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 54
        }
      },
      '6': {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 54
        }
      },
      '7': {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 55
        }
      },
      '8': {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 17
        }
      },
      '9': {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 36
        }
      },
      '10': {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 36
        }
      },
      '11': {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 57
        }
      },
      '12': {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 133
        }
      },
      '13': {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 30
        }
      },
      '14': {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 48
        }
      },
      '15': {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 41,
          column: 130
        }
      },
      '16': {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 42,
          column: 74
        }
      },
      '17': {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 53,
          column: 5
        }
      },
      '18': {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      '19': {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 43
        }
      },
      '20': {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 59,
          column: 77
        }
      },
      '21': {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 76
        }
      },
      '22': {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 43
        }
      },
      '23': {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 63,
          column: 50
        }
      },
      '24': {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 50
        }
      },
      '25': {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 30
        }
      },
      '26': {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 51
        }
      },
      '27': {
        start: {
          line: 75,
          column: 14
        },
        end: {
          line: 75,
          column: 18
        }
      },
      '28': {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      '29': {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 17
        }
      },
      '30': {
        start: {
          line: 79,
          column: 11
        },
        end: {
          line: 81,
          column: 5
        }
      },
      '31': {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 17
        }
      },
      '32': {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 85
        }
      },
      '33': {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      '34': {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 45
        }
      },
      '35': {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      '36': {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 42
        }
      },
      '37': {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 15
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 44
          },
          end: {
            line: 9,
            column: 3
          }
        },
        line: 5
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 11
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 3
          }
        },
        loc: {
          start: {
            line: 15,
            column: 17
          },
          end: {
            line: 17,
            column: 3
          }
        },
        line: 15
      },
      '3': {
        name: '(anonymous_3)',
        decl: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 19
      },
      '4': {
        name: '(anonymous_4)',
        decl: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 3
          }
        },
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 23
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 19
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      '6': {
        name: '(anonymous_6)',
        decl: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 3
          }
        },
        loc: {
          start: {
            line: 31,
            column: 56
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 31
      },
      '7': {
        name: '(anonymous_7)',
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 39
      },
      '8': {
        name: '(anonymous_8)',
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 33
          },
          end: {
            line: 72,
            column: 3
          }
        },
        line: 70
      },
      '9': {
        name: '(anonymous_9)',
        decl: {
          start: {
            line: 74,
            column: 2
          },
          end: {
            line: 74,
            column: 3
          }
        },
        loc: {
          start: {
            line: 74,
            column: 42
          },
          end: {
            line: 96,
            column: 3
          }
        },
        line: 74
      },
      '10': {
        name: 'addToUrl',
        decl: {
          start: {
            line: 83,
            column: 13
          },
          end: {
            line: 83,
            column: 21
          }
        },
        loc: {
          start: {
            line: 83,
            column: 30
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 83
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 5,
            column: 28
          },
          end: {
            line: 5,
            column: 42
          }
        },
        type: 'default-arg',
        locations: [{
          start: {
            line: 5,
            column: 38
          },
          end: {
            line: 5,
            column: 42
          }
        }],
        line: 5
      },
      '1': {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 36
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 36
          }
        }, {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 36
          }
        }],
        line: 33
      },
      '2': {
        loc: {
          start: {
            line: 35,
            column: 80
          },
          end: {
            line: 35,
            column: 130
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 35,
            column: 99
          },
          end: {
            line: 35,
            column: 125
          }
        }, {
          start: {
            line: 35,
            column: 128
          },
          end: {
            line: 35,
            column: 130
          }
        }],
        line: 35
      },
      '3': {
        loc: {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 130
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 41,
            column: 56
          },
          end: {
            line: 41,
            column: 83
          }
        }, {
          start: {
            line: 41,
            column: 86
          },
          end: {
            line: 41,
            column: 130
          }
        }],
        line: 41
      },
      '4': {
        loc: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 42,
            column: 74
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 67
          }
        }, {
          start: {
            line: 42,
            column: 70
          },
          end: {
            line: 42,
            column: 74
          }
        }],
        line: 42
      },
      '5': {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }],
        line: 55
      },
      '6': {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 70
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 70
          }
        }],
        line: 55
      },
      '7': {
        loc: {
          start: {
            line: 71,
            column: 11
          },
          end: {
            line: 71,
            column: 50
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 71,
            column: 11
          },
          end: {
            line: 71,
            column: 28
          }
        }, {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 50
          }
        }],
        line: 71
      },
      '8': {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }],
        line: 77
      },
      '9': {
        loc: {
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 81,
            column: 5
          }
        }],
        line: 79
      },
      '10': {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }],
        line: 87
      },
      '11': {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }],
        line: 91
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0,
      '22': 0,
      '23': 0,
      '24': 0,
      '25': 0,
      '26': 0,
      '27': 0,
      '28': 0,
      '29': 0,
      '30': 0,
      '31': 0,
      '32': 0,
      '33': 0,
      '34': 0,
      '35': 0,
      '36': 0,
      '37': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0
    },
    b: {
      '0': [0],
      '1': [0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0],
      '6': [0, 0],
      '7': [0, 0],
      '8': [0, 0],
      '9': [0, 0],
      '10': [0, 0],
      '11': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _https = require('../libs/https');

var _https2 = _interopRequireDefault(_https);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Client = function () {
  function Client(key, secret) {
    var version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_2ojenfrm3u.b[0][0]++, 'v1');
    (0, _classCallCheck3.default)(this, Client);
    cov_2ojenfrm3u.f[0]++;
    cov_2ojenfrm3u.s[0]++;

    this.version = version;
    cov_2ojenfrm3u.s[1]++;
    this.key = key;
    cov_2ojenfrm3u.s[2]++;
    this.secret = secret;
  }

  (0, _createClass3.default)(Client, [{
    key: 'get',
    value: function get() {
      var _ref;

      cov_2ojenfrm3u.f[1]++;
      cov_2ojenfrm3u.s[3]++;

      return this.request.apply(this, (0, _toConsumableArray3.default)((_ref = ['get']).concat.apply(_ref, arguments)));
    }
  }, {
    key: 'post',
    value: function post() {
      var _ref2;

      cov_2ojenfrm3u.f[2]++;
      cov_2ojenfrm3u.s[4]++;

      return this.request.apply(this, (0, _toConsumableArray3.default)((_ref2 = ['post']).concat.apply(_ref2, arguments)));
    }
  }, {
    key: 'put',
    value: function put() {
      var _ref3;

      cov_2ojenfrm3u.f[3]++;
      cov_2ojenfrm3u.s[5]++;

      return this.request.apply(this, (0, _toConsumableArray3.default)((_ref3 = ['patch']).concat.apply(_ref3, arguments)));
    }
  }, {
    key: 'patch',
    value: function patch() {
      var _ref4;

      cov_2ojenfrm3u.f[4]++;
      cov_2ojenfrm3u.s[6]++;

      return this.request.apply(this, (0, _toConsumableArray3.default)((_ref4 = ['patch']).concat.apply(_ref4, arguments)));
    }
  }, {
    key: 'delete',
    value: function _delete() {
      var _ref5;

      cov_2ojenfrm3u.f[5]++;
      cov_2ojenfrm3u.s[7]++;

      return this.request.apply(this, (0, _toConsumableArray3.default)((_ref5 = ['delete']).concat.apply(_ref5, arguments)));
    }
  }, {
    key: 'signature',
    value: function signature(timestamp, method, requestPath, bodyConst) {
      cov_2ojenfrm3u.f[6]++;

      var body = (cov_2ojenfrm3u.s[8]++, {});
      cov_2ojenfrm3u.s[9]++;
      if (bodyConst) {
          cov_2ojenfrm3u.b[1][0]++;
          cov_2ojenfrm3u.s[10]++;
          body = bodyConst;
        } else {
        cov_2ojenfrm3u.b[1][1]++;
      }var hmac = (cov_2ojenfrm3u.s[11]++, _crypto2.default.createHmac('sha256', this.secret));
      cov_2ojenfrm3u.s[12]++;
      hmac.update(timestamp + '|' + method + '|/api/' + this.version + '/' + requestPath + (method !== 'GET' ? (cov_2ojenfrm3u.b[2][0]++, '|' + (0, _stringify2.default)(body)) : (cov_2ojenfrm3u.b[2][1]++, '')));
      cov_2ojenfrm3u.s[13]++;
      return hmac.digest('hex');
    }
  }, {
    key: 'request',
    value: function request() {
      cov_2ojenfrm3u.f[7]++;

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var method = (cov_2ojenfrm3u.s[14]++, String(args[0]).toUpperCase());
      var requestPath = (cov_2ojenfrm3u.s[15]++, Client.requestHasBody(method) ? (cov_2ojenfrm3u.b[3][0]++, args.slice(1, -1).join('/')) : (cov_2ojenfrm3u.b[3][1]++, Client.appendObjectAsQuery(args[1], args[2])));
      var body = (cov_2ojenfrm3u.s[16]++, Client.requestHasBody(method) ? (cov_2ojenfrm3u.b[4][0]++, args.slice(-1)[0]) : (cov_2ojenfrm3u.b[4][1]++, null));

      var req = (cov_2ojenfrm3u.s[17]++, {
        'hostname': 'coinfalcon.com',
        'headers': {
          'Content-Type': 'application/json; charset=utf-8'
        },
        'path': '/api/' + this.version + '/' + requestPath,
        'port': 443,
        'method': method,
        'body': body
      });

      cov_2ojenfrm3u.s[18]++;
      if ((cov_2ojenfrm3u.b[6][0]++, this.version === 'v1') && (cov_2ojenfrm3u.b[6][1]++, requestPath.indexOf('markets/') === 0)) {
        // public request

        cov_2ojenfrm3u.b[5][0]++;
      } else {
        cov_2ojenfrm3u.b[5][1]++;

        var timestamp = (cov_2ojenfrm3u.s[19]++, Date.now().toString());
        cov_2ojenfrm3u.s[20]++;
        timestamp = parseInt(timestamp.substring(0, timestamp.length - 3), 10);
        var signature = (cov_2ojenfrm3u.s[21]++, this.signature(timestamp, method, requestPath, body));

        cov_2ojenfrm3u.s[22]++;
        req.headers['CF-API-KEY'] = this.key;
        cov_2ojenfrm3u.s[23]++;
        req.headers['CF-API-TIMESTAMP'] = timestamp;
        cov_2ojenfrm3u.s[24]++;
        req.headers['CF-API-SIGNATURE'] = signature;
      }

      cov_2ojenfrm3u.s[25]++;
      return _https2.default.request(req);
    }
  }], [{
    key: 'requestHasBody',
    value: function requestHasBody(method) {
      cov_2ojenfrm3u.f[8]++;
      cov_2ojenfrm3u.s[26]++;

      return (cov_2ojenfrm3u.b[7][0]++, method === 'POST') || (cov_2ojenfrm3u.b[7][1]++, method === 'PATCH');
    }
  }, {
    key: 'appendObjectAsQuery',
    value: function appendObjectAsQuery(base, body) {
      cov_2ojenfrm3u.f[9]++;

      var url = (cov_2ojenfrm3u.s[27]++, base);

      cov_2ojenfrm3u.s[28]++;
      if (url.indexOf('?') === -1) {
        cov_2ojenfrm3u.b[8][0]++;
        cov_2ojenfrm3u.s[29]++;

        url += '?';
      } else {
          cov_2ojenfrm3u.b[8][1]++;
          cov_2ojenfrm3u.s[30]++;
          if (url.charAt(url.length - 1) !== '&') {
            cov_2ojenfrm3u.b[9][0]++;
            cov_2ojenfrm3u.s[31]++;

            url += '&';
          } else {
            cov_2ojenfrm3u.b[9][1]++;
          }
        }function addToUrl(entry) {
        cov_2ojenfrm3u.f[10]++;
        cov_2ojenfrm3u.s[32]++;

        url += encodeURIComponent(entry[0]) + '=' + encodeURIComponent(entry[1]) + '&';
      }

      cov_2ojenfrm3u.s[33]++;
      if (body) {
        cov_2ojenfrm3u.b[10][0]++;
        cov_2ojenfrm3u.s[34]++;

        (0, _entries2.default)(body).forEach(addToUrl);
      } else {
        cov_2ojenfrm3u.b[10][1]++;
      }

      cov_2ojenfrm3u.s[35]++;
      if (url.charAt(url.length - 1)) {
        cov_2ojenfrm3u.b[11][0]++;
        cov_2ojenfrm3u.s[36]++;

        url = url.substr(0, url.length - 1);
      } else {
        cov_2ojenfrm3u.b[11][1]++;
      }

      cov_2ojenfrm3u.s[37]++;
      return url;
    }
  }]);
  return Client;
}();

exports.default = Client;
//# sourceMappingURL=index.js.map