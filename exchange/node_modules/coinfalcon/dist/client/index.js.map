{"version":3,"sources":["../../src/client/index.js"],"names":["Client","key","secret","version","request","concat","timestamp","method","requestPath","bodyConst","body","hmac","createHmac","update","digest","args","String","toUpperCase","requestHasBody","slice","join","appendObjectAsQuery","req","indexOf","Date","now","toString","parseInt","substring","length","signature","headers","base","url","charAt","addToUrl","entry","encodeURIComponent","forEach","substr"],"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","file":"index.js","sourcesContent":["import crypto from 'crypto';\nimport https from '../libs/https';\n\nexport default class Client {\n  constructor (key, secret, version = 'v1') {\n    this.version = version;\n    this.key = key;\n    this.secret = secret;\n  }\n\n  get (...args) {\n    return this.request(...['get'].concat(...args));\n  }\n\n  post (...args) {\n    return this.request(...['post'].concat(...args));\n  }\n\n  put (...args) {\n    return this.request(...['patch'].concat(...args));\n  }\n\n  patch (...args) {\n    return this.request(...['patch'].concat(...args));\n  }\n\n  delete (...args) {\n    return this.request(...['delete'].concat(...args));\n  }\n\n  signature (timestamp, method, requestPath, bodyConst) {\n    let body = {};\n    if (bodyConst) body = bodyConst;\n    const hmac = crypto.createHmac('sha256', this.secret);\n    hmac.update(`${timestamp}|${method}|/api/${this.version}/${requestPath}` + (method !== 'GET' ? `|${JSON.stringify(body)}` : ''));\n    return hmac.digest('hex');\n  }\n\n  request (...args) {\n    const method = String(args[0]).toUpperCase();\n    const requestPath = Client.requestHasBody(method) ? args.slice(1, -1).join('/') : Client.appendObjectAsQuery(args[1], args[2]);\n    const body = (Client.requestHasBody(method) ? args.slice(-1)[0] : null);\n\n    const req = {\n      'hostname': 'coinfalcon.com',\n      'headers': {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      'path': '/api/' + this.version + '/' + requestPath,\n      'port': 443,\n      'method': method,\n      'body': body\n    };\n\n    if (this.version === 'v1' && requestPath.indexOf('markets/') === 0) {\n      // public request\n    } else {\n      let timestamp = Date.now().toString();\n      timestamp = parseInt(timestamp.substring(0, timestamp.length - 3), 10);\n      const signature = this.signature(timestamp, method, requestPath, body);\n\n      req.headers['CF-API-KEY'] = this.key;\n      req.headers['CF-API-TIMESTAMP'] = timestamp;\n      req.headers['CF-API-SIGNATURE'] = signature;\n    }\n\n    return https.request(req);\n  }\n\n  static requestHasBody (method) {\n    return method === 'POST' || method === 'PATCH';\n  }\n\n  static appendObjectAsQuery (base, body) {\n    let url = base;\n\n    if (url.indexOf('?') === -1) {\n      url += '?';\n    } else if (url.charAt(url.length - 1) !== '&') {\n      url += '&';\n    }\n\n    function addToUrl (entry) {\n      url += encodeURIComponent(entry[0]) + '=' + encodeURIComponent(entry[1]) + '&';\n    }\n\n    if (body) {\n      Object.entries(body).forEach(addToUrl);\n    }\n\n    if (url.charAt(url.length - 1)) {\n      url = url.substr(0, url.length - 1);\n    }\n\n    return url;\n  }\n}\n"]}