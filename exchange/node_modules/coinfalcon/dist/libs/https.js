'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var cov_2gzrx27i4v = function () {
  var path = '/Users/Chase/Sites/Charity/coinfalcon-node/src/libs/https.js',
      hash = '2fe3e9d7cafd2bc8900da74998bf36bdad64c051',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/Chase/Sites/Charity/coinfalcon-node/src/libs/https.js',
    statementMap: {
      '0': {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 5,
          column: 52
        }
      },
      '1': {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 58,
          column: 7
        }
      },
      '2': {
        start: {
          line: 7,
          column: 6
        },
        end: {
          line: 13,
          column: 7
        }
      },
      '3': {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 64
        }
      },
      '4': {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 12,
          column: 34
        }
      },
      '5': {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 48,
          column: 8
        }
      },
      '6': {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 28
        }
      },
      '7': {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      '8': {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      '9': {
        start: {
          line: 20,
          column: 10
        },
        end: {
          line: 20,
          column: 34
        }
      },
      '10': {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      '11': {
        start: {
          line: 23,
          column: 10
        },
        end: {
          line: 27,
          column: 11
        }
      },
      '12': {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 59
        }
      },
      '13': {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 29
        }
      },
      '14': {
        start: {
          line: 29,
          column: 10
        },
        end: {
          line: 44,
          column: 11
        }
      },
      '15': {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      '16': {
        start: {
          line: 31,
          column: 14
        },
        end: {
          line: 36,
          column: 15
        }
      },
      '17': {
        start: {
          line: 32,
          column: 36
        },
        end: {
          line: 32,
          column: 61
        }
      },
      '18': {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 55
        }
      },
      '19': {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 36
        }
      },
      '20': {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 23
        }
      },
      '21': {
        start: {
          line: 38,
          column: 14
        },
        end: {
          line: 38,
          column: 51
        }
      },
      '22': {
        start: {
          line: 39,
          column: 14
        },
        end: {
          line: 39,
          column: 21
        }
      },
      '23': {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 51
        }
      },
      '24': {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 19
        }
      },
      '25': {
        start: {
          line: 46,
          column: 10
        },
        end: {
          line: 46,
          column: 31
        }
      },
      '26': {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 52,
          column: 9
        }
      },
      '27': {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 22
        }
      },
      '28': {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 56,
          column: 7
        }
      },
      '29': {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 42
        }
      },
      '30': {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 20
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 4,
            column: 2
          },
          end: {
            line: 4,
            column: 3
          }
        },
        loc: {
          start: {
            line: 4,
            column: 27
          },
          end: {
            line: 59,
            column: 3
          }
        },
        line: 4
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 24
          }
        },
        loc: {
          start: {
            line: 6,
            column: 44
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 6
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 15,
            column: 51
          },
          end: {
            line: 15,
            column: 52
          }
        },
        loc: {
          start: {
            line: 15,
            column: 65
          },
          end: {
            line: 48,
            column: 7
          }
        },
        line: 15
      },
      '3': {
        name: '(anonymous_3)',
        decl: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 19,
            column: 29
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 21,
            column: 9
          }
        },
        line: 19
      },
      '4': {
        name: '(anonymous_4)',
        decl: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 28
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 47,
            column: 9
          }
        },
        line: 22
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 50,
            column: 27
          }
        },
        loc: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 52,
            column: 7
          }
        },
        line: 50
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 7,
            column: 6
          },
          end: {
            line: 13,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 7,
            column: 6
          },
          end: {
            line: 13,
            column: 7
          }
        }, {
          start: {
            line: 7,
            column: 6
          },
          end: {
            line: 13,
            column: 7
          }
        }],
        line: 7
      },
      '1': {
        loc: {
          start: {
            line: 7,
            column: 10
          },
          end: {
            line: 7,
            column: 75
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 7,
            column: 10
          },
          end: {
            line: 7,
            column: 44
          }
        }, {
          start: {
            line: 7,
            column: 48
          },
          end: {
            line: 7,
            column: 75
          }
        }],
        line: 7
      },
      '2': {
        loc: {
          start: {
            line: 29,
            column: 10
          },
          end: {
            line: 44,
            column: 11
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 29,
            column: 10
          },
          end: {
            line: 44,
            column: 11
          }
        }, {
          start: {
            line: 29,
            column: 10
          },
          end: {
            line: 44,
            column: 11
          }
        }],
        line: 29
      },
      '3': {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }],
        line: 30
      },
      '4': {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 64
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 64
          }
        }],
        line: 30
      },
      '5': {
        loc: {
          start: {
            line: 31,
            column: 14
          },
          end: {
            line: 36,
            column: 15
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 31,
            column: 14
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 31,
            column: 14
          },
          end: {
            line: 36,
            column: 15
          }
        }],
        line: 31
      },
      '6': {
        loc: {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        }, {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        }],
        line: 54
      },
      '7': {
        loc: {
          start: {
            line: 54,
            column: 10
          },
          end: {
            line: 54,
            column: 75
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 54,
            column: 10
          },
          end: {
            line: 54,
            column: 44
          }
        }, {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 75
          }
        }],
        line: 54
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0,
      '22': 0,
      '23': 0,
      '24': 0,
      '25': 0,
      '26': 0,
      '27': 0,
      '28': 0,
      '29': 0,
      '30': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0],
      '6': [0, 0],
      '7': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _https = require('https');

var _https2 = _interopRequireDefault(_https);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var customHttps = function () {
  function customHttps() {
    (0, _classCallCheck3.default)(this, customHttps);
  }

  (0, _createClass3.default)(customHttps, null, [{
    key: 'request',
    value: function request(options) {
      cov_2gzrx27i4v.f[0]++;

      var requestParams = (cov_2gzrx27i4v.s[0]++, (0, _assign2.default)({}, options));
      cov_2gzrx27i4v.s[1]++;
      return new _promise2.default(function (resolve, reject) {
        cov_2gzrx27i4v.f[1]++;
        cov_2gzrx27i4v.s[2]++;

        if ((cov_2gzrx27i4v.b[1][0]++, 'body' in requestParams === true) && (cov_2gzrx27i4v.b[1][1]++, requestParams.body !== null)) {
          cov_2gzrx27i4v.b[0][0]++;
          cov_2gzrx27i4v.s[3]++;

          requestParams.body = (0, _stringify2.default)(requestParams.body);
          cov_2gzrx27i4v.s[4]++;
          requestParams.headers = (0, _assign2.default)({
            'Content-Type': 'application/json',
            'Content-Length': Buffer.byteLength(requestParams.body)
          }, requestParams.headers);
        } else {
          cov_2gzrx27i4v.b[0][1]++;
        }

        var request = (cov_2gzrx27i4v.s[5]++, _https2.default.request(requestParams, function (response) {
          cov_2gzrx27i4v.f[2]++;

          var currentBody = (cov_2gzrx27i4v.s[6]++, []);

          cov_2gzrx27i4v.s[7]++;
          response.setEncoding('utf8');
          cov_2gzrx27i4v.s[8]++;
          response.on('data', function (chunk) {
            cov_2gzrx27i4v.f[3]++;
            cov_2gzrx27i4v.s[9]++;

            currentBody.push(chunk);
          });
          cov_2gzrx27i4v.s[10]++;
          response.on('end', function () {
            cov_2gzrx27i4v.f[4]++;
            cov_2gzrx27i4v.s[11]++;

            try {
              cov_2gzrx27i4v.s[12]++;

              currentBody = JSON.parse(currentBody.join(''));
            } catch (e) {
              cov_2gzrx27i4v.s[13]++;

              currentBody = '';
            }

            cov_2gzrx27i4v.s[14]++;
            if ([200, 201, 204].includes(response.statusCode) === false) {
              cov_2gzrx27i4v.b[2][0]++;
              cov_2gzrx27i4v.s[15]++;

              if ((cov_2gzrx27i4v.b[4][0]++, currentBody) && (cov_2gzrx27i4v.b[4][1]++, 'error' in currentBody === true)) {
                cov_2gzrx27i4v.b[3][0]++;
                cov_2gzrx27i4v.s[16]++;

                if (Object.prototype.toString.call(currentBody.error) === '[object Object]') {
                  cov_2gzrx27i4v.b[5][0]++;

                  var fieldsError = (cov_2gzrx27i4v.s[17]++, new Error('invalid body'));
                  cov_2gzrx27i4v.s[18]++;
                  fieldsError.fields = currentBody.error;
                  cov_2gzrx27i4v.s[19]++;
                  reject(fieldsError);
                  cov_2gzrx27i4v.s[20]++;
                  return;
                } else {
                  cov_2gzrx27i4v.b[5][1]++;
                }

                cov_2gzrx27i4v.s[21]++;
                reject(new Error(currentBody.error));
                cov_2gzrx27i4v.s[22]++;
                return;
              } else {
                cov_2gzrx27i4v.b[3][1]++;
              }

              cov_2gzrx27i4v.s[23]++;
              reject(new Error(response.statusCode));
              cov_2gzrx27i4v.s[24]++;
              return;
            } else {
              cov_2gzrx27i4v.b[2][1]++;
            }

            cov_2gzrx27i4v.s[25]++;
            resolve(currentBody);
          });
        }));

        cov_2gzrx27i4v.s[26]++;
        request.on('error', function (error) {
          cov_2gzrx27i4v.f[5]++;
          cov_2gzrx27i4v.s[27]++;

          reject(error);
        });

        cov_2gzrx27i4v.s[28]++;
        if ((cov_2gzrx27i4v.b[7][0]++, 'body' in requestParams === true) && (cov_2gzrx27i4v.b[7][1]++, requestParams.body !== null)) {
          cov_2gzrx27i4v.b[6][0]++;
          cov_2gzrx27i4v.s[29]++;

          request.write(requestParams.body);
        } else {
          cov_2gzrx27i4v.b[6][1]++;
        }
        cov_2gzrx27i4v.s[30]++;
        request.end();
      });
    }
  }]);
  return customHttps;
}();

exports.default = customHttps;
//# sourceMappingURL=https.js.map